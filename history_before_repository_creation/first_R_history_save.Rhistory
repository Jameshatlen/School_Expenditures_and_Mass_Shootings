help.start()
6+5
^*8
7*8
?factpr
?factor
5+6
4+6
4+6
4+6
install.packages("ggplot2")
library(ggplot2)
library(maps)
states <- map_data("county")
View(states)
map('county', fill = TRUE, col = sample.int(20,1777,TRUE))
install.packages("devtoots")
install.packages("devtools")
library(tidyverse)
library(urbnmapr)
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
## "C:\\rtools40\\usr\\bin\\make.exe"
install.packages("jsonlite", type = "source")
install.packages('devtools')
library(tidyverse)
library(urbnmapr)
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
install.packages("ggplot2")
library("ggplot2")
library(tidyverse)
library(urbnmapr)
ggplot() +
geom_polygon(data = urbnmapr::states, mapping = aes(x = long, y = lat, group = group),
fill = “grey”, color = “white”) +
coord_map(projection = "albers", lat0 = 39, lat1 = 45)
install.packages("tidyverse")
install.packages("urbanmapr")
library(tidyverse)
library(urbnmapr)
devtools::install_github(“UrbanInstitute/urbnmapr”)
install.packages('devtools')
devtools::install_github(“UrbanInstitute/urbnmapr”)
library(usmap)
library(ggplot2)
plot_usmap(regions = "counties") +
labs(title = "US Counties",
subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(color = "black", fill = "lightblue"))
install.packages(""usmap)
install.packages(""usmap"")
install.packages(usmap")
install.packages("usmap")
install.packages("usmap")
library(usmap)
library(ggplot2)
plot_usmap(regions = "counties") +
labs(title = "US Counties",
subtitle = "This is a blank map of the counties of the United States.") +
theme(panel.background = element_rect(color = "black", fill = "lightblue"))
po_2015
pop_2015
plot_usmap(data = statepop, values = "pop_2015", color = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
print(statepop)
location(statepop)
install.packages("lobstr")
location(statepop)
?plot_usmap
load("~/.RData")
load("~/.Rhistory")
install.packages(dyplr)
install.packages("dyplr")
install.packages("tidyverse")
install.packages("leaflet")
6+4
install.packages("htmltools")
install.packages("leaflet")
install.packages("tidyverse")
install.packages("htmlwidgets")
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
library(leaflet)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN'))) %>%
addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
# If you don't have the following packages installed yet, uncomment and run the lines below
#install.packages("tigris")
#install.packages("dplyr")
#install.packages("leaflet")
library(tigris)
library(dplyr)
library(leaflet)
# Downloading the shapefiles for states at the lowest resolution
states <- states(cb=T)
install.packages("tigris")
library(tigris)
library(dplyr)
library(leaflet)
states <- states(cb=T)
states %>%
leaflet() %>%
addTiles() %>%
addPolygons(popup=~NAME)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data =  ,
fillColor = "red",
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = states_merged_sb$total,
position = "bottomright",
title = "Starbucks")
data_whipped<- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50)
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = data_whipped ,
fillColor = "red",
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb) %>%
addLegend(pal = pal,
values = data_whipped,
position = "bottomright",
title = "Starbucks")
leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = data_whipped ,
fillColor = "red",
fillOpacity = 0.7,
weight = 0.2,
smoothFactor = 0.2,
popup = ~popup_sb)
?addPolygons
states_merged_sb <- geo_join(states, sb_state, "STUSPS", "state")
print(states)
view(states)
summary(states)
?geo_join
read.csv("C:/Users/james/Documents/my_datasets/US_violent_crime")
read.csv("C:\\Users\\james\\Documents\\my_datasets\\US_violent_crime")
read.csv("C:\Users\james\Downloads\archive\US_violent_crime")
read.csv("C:/Users/james/Downloads/archive/US_violent_crime")
read.csv("C:/Users/james/Downloads/archive/.csv")
read.csv("C:/Users/james/Downloads/archive/US_violent_crime.csv")
states <- states(cb=T)
states
dir()
crime1<- > read.csv("C:/Users/james/Downloads/archive/US_violent_crime.csv")
crime1<- read.csv("C:/Users/james/Downloads/archive/US_violent_crime.csv")
crime1<- read.csv("C:/Users/james/Downloads/archive/US_violent_crime.csv")
crime1
str(states)
states_merged_sb <- geo_join(states, crime1, "STUSPS", "x")
typeof(crime1)
?list
str(crime1)
states_merged_sb <- geo_join(states, crime1, "STUSPS", "X")
states_merged_sb
pal <- colorNumeric("Greens", domain=states_merged_sb$total)
states_merged_sb$total
states_merged_sb <- subset(states_merged_sb, !is.na(total))
popup_sb <- paste0("Total: ", as.character(states_merged_sb$total))
> pal <- colorNumeric("Greens", domain=50)
pal <- colorNumeric("Greens", domain=50)
pal
states_merged_sb <- subset(states_merged_sb, !is.na(50))
popup_sb <- paste0("Total: ", as.character(states_merged_sb$total))
pal <- colorNumeric("Greens", domain=states_merged_sb$Murder)
pal <- colorNumeric("Greens")
?colorNumeric
pal <- colorNumeric("Greens", domain=states_merged_sb$Assault)
?addPolygons
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = crime1$Murder , fillOpacity = 0.9,
weight = 0.2,
smoothFactor = 0.2)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = data_whipped , fillOpacity = 0.9,
weight = 0.2,
smoothFactor = 0.2)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(-98.483330, 38.712046, zoom = 4) %>%
addPolygons(data = states_merged_sb , fillOpacity = 0.9,
weight = 0.2,
smoothFactor = 0.2)
states %>%
leaflet() %>%
addTiles() %>%
addPolygons(popup=states$NAME)
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m
leaflet() %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
leaflet() %>%
setView(-96, 37.8, 4) %>%
addProviderTiles(providers$CartoDB.Positron)
m<-leaflet() %>%
setView(-96, 37.8, 4) %>%
addProviderTiles(providers$CartoDB.Positron)
m %>% addPolygons()
m<-leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles(providers$CartoDB.Positron)
m %>% addPolygons()
states
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$GEOID, bins = bins)
m %>% addPolygons(
fillColor = ~pal(GEOID),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$GEOID, bins = bins)
m %>% addPolygons()
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
install.packages("geojsonio")
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
states
summary(states)
crime1
states_crime <-cbind(states,crime1$Assault)
shooting_df<- read.csv("C:/Users/james/Documents/my_datasets/mass_shooting_events_stanford_msa_release_06142016_plus2017")
shooting_df<- read.csv("C:/Users/james/Documents/my_datasets/mass_shooting_events_stanford_msa_release_06142016_plus2017.csv")
shooting_df
str(shooting_df)
savehistory("~/R/my_R_history_filess/first_R_history_save.Rhistory")
